generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String           @id @default(cuid())
  isAdmin                 Boolean          @default(false)
  email                   String           @unique
  username                String
  password                String
  createdAt               DateTime         @default(now())
  githubId                String?          @unique
  googleId                String?          @unique
  vsbId                   String?          @unique
  isEmailVerified         Boolean          @default(false)
  verificationToken       String?          @unique
  verificationTokenExpiry DateTime?
  resetCode               String?
  resetCodeExpiry         DateTime?
  resetToken              String?          @unique
  resetTokenExpiry        DateTime?
  preferences             UserPreferences?
  apiKey                  String?
}

model UserChats {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]
}

model Chat {
  id              String     @id @default(cuid())
  userId          String
  title           String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  userChatsId     Int?
  type            String
  description     String?
  instructions    String?
  embeddings      Float[]
  UserChats       UserChats? @relation(fields: [userChatsId], references: [id])
  files           File[]
  history         Message[]
  isShared        Boolean    @default(false)
  sharedCode      String?    @unique
  sharedWith      String[]   @default([])
  sharePermission String     @default("view")
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    String
  role      Role
  text      String
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model File {
  id        Int      @id @default(autoincrement())
  chatId    String
  filePath  String
  fileType  String
  createdAt DateTime @default(now())
  fileName  String
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model UserPreferences {
  id          String @id @default(cuid())
  userId      String @unique
  modelId     String @default("gpt-4o-mini")
  temperature Float  @default(0.7)
  maxTokens   Int    @default(1000)
  user        User   @relation(fields: [userId], references: [id])
}

enum Role {
  user
  model
}
